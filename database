CREATE DATABASE tcampo;
USE tcampo;
-- Database tCampo

CREATE TABLE Categoria (
    codigoCategoria INT NOT NULL PRIMARY KEY,
    nombreCategoria VARCHAR(50) NOT NULL
);

CREATE TABLE Producto (
    codigoProducto BigInt NOT NULL PRIMARY KEY,
    cantidadDisponible INT NOT NULL,
    nombreProducto VARCHAR(50) NOT NULL,
    precioDeCompra DOUBLE,
    precioDeVenta DOUBLE NOT NULL,
    descripcionProducto VARCHAR(50),
    imagenProducto VARCHAR(50),
    idCategoria INT REFERENCES Categoria(codigoCategoria)
);

CREATE TABLE Persona (
    idPersona INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    nombres VARCHAR(50),
    Apellidos VARCHAR(50),
    tipoPersona CHAR(1),/*C cliente, A administrador, E empleado*/
    telefono VARCHAR(19),
    email VARCHAR(30),
    direccion VARCHAR(30),
    password VARCHAR(30)
);

INSERT INTO Persona VALUES
(1,'Santiago','Sosa Reyes','A','3115078547','santiago.sosa@uptc.edu.co','Clle 1 #2-3','123');

CREATE TABLE Facturas (
    idFactura INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    idCliente INT,
    fecha DATE NOT NULL,
    tipoTransaccion CHAR(1)/*V Venta, C Compra*/
);

CREATE TABLE DetalleFactura (
    idDetalle INT NOT NULL AUTO_INCREMENT,
    idFactura INT NOT NULL REFERENCES Facturas(idFactura),
    idProducto BigInt NOT NULL REFERENCES Producto(codigoProducto),
    cantidad INT NOT NULL,
    precioProducto DOUBLE NOT NULL,
    primary KEY (idDetalle,idFactura)
);

SELECT D.idFactura, P.nombreProducto, T.total, F.tipoTransaccion
FROM Facturas F, Producto P, DetalleFactura D,
(SELECT idFactura as idFac , sum(precioProducto * cantidad) as total
FROM DetalleFactura
group by idFactura) T
WHERE F.idFactura = T.idFac
AND F.idFactura = D.idFactura
AND D.idProducto = P.codigoProducto
AND F.fecha = STR_TO_DATE('2022-02-27', '%Y-%m-%d');


/*
SELECT D.idFactura, SUM(D.cantidad * D.precioProducto) AS Total
FROM DetalleFactura D, Facturas F
WHERE D.idFactura = F.idFactura
AND F.tipoTransaccion = 'V'
AND F.fecha = STR_TO_DATE('2022-03-07', '%Y-%m-%d')
GROUP BY D.idFactura;
*/

/*
--Crear una factura
INSERT INTO Facturas(fecha, tipoTransaccion)
VALUES (STR_TO_DATE('2022-02-27', '%Y-%m-%d'), 'C');

--Asociar porductos de la factura (en este caso CADENOL)

INSERT INTO DetalleFactura(idFactura , idProducto, cantidad, precioProducto)
VALUES((SELECT MAX(idFactura) FROM Facturas) , 778585 , 2 , (SELECT precioDeVenta FROM Producto WHERE codigoProducto = 778585));

*/

SELECT D.idFactura, P.nombreProducto, (D.cantidad * D.precioProducto) AS SubTotal, F.tipoTransaccion
FROM Facturas F, Producto P, DetalleFactura D
WHERE F.idFactura = D.idFactura
AND D.idProducto = P.codigoProducto
AND F.fecha = STR_TO_DATE('2022-03-07', '%Y-%m-%d');

--Crear una factura
INSERT INTO Facturas(idCliente, fecha, tipoTransaccion)
VALUES (5 , STR_TO_DATE('2022-02-27', '%Y-%m-%d'), 'C');

--Asociar porductos de la factura (en este caso CADENOL)

INSERT INTO DetalleFactura(idFactura , idProducto, cantidad, precioProducto)
VALUES((SELECT MAX(idFactura) FROM Facturas) , 778585 , 2 , (SELECT precioDeVenta FROM Producto WHERE codigoProducto = 778585));

INSERT INTO DetalleFactura(idFactura , idProducto, cantidad, precioProducto)
VALUES((SELECT MAX(idFactura) FROM Facturas) , 77020216780 , 2 , (SELECT precioDeVenta FROM Producto WHERE codigoProducto = 77020216780));

--Para una compra (precio de Compra)


--Descontar del inventario

delimiter //
CREATE PROCEDURE sincInventario(
    IN tipoTransaccion CHAR(1)
)
BEGIN
    DECLARE contador INT DEFAULT 0;
    DECLARE v_cantidad_actual INT;
    DECLARE var_id_prod BigInt;
    DECLARE var_cantidad INT;		   	
    #Cursor de idProductos y cantidades de la ultima factura
    DECLARE cursor1 CURSOR FOR SELECT idProducto, cantidad FROM DetalleFactura 
    WHERE idFactura = (SELECT MAX(idFactura) FROM Facturas);
    
    DECLARE EXIT HANDLER FOR NOT FOUND SET contador = 0;
    
    OPEN cursor1;
    bucle: LOOP
    FETCH cursor1 INTO var_id_prod, var_cantidad;
    	IF contador = 1 THEN LEAVE bucle;
	END IF;
        #Guardo la cantidad actual del producto en una varibale
        SELECT cantidadDisponible
        INTO v_cantidad_actual
        FROM Producto
        WHERE codigoProducto = var_id_prod;
        #Si es una venta debo restar la cantidad vendida
        IF tipoTransaccion = 'V' THEN
            UPDATE Producto
            SET cantidadDisponible = (v_cantidad_actual - var_cantidad)
            WHERE codigoProducto = var_id_prod;
        #Si es una compra debo sumar la cantidad comprada
        ELSEIF tipoTransaccion = 'C' THEN
            UPDATE Producto
            SET cantidadDisponible = (v_cantidad_actual + var_cantidad)
            WHERE codigoProducto = var_id_prod;
        END IF;
    END LOOP bucle;
    CLOSE cursor1;
END;//
delimiter ;

--Ejemplo llamado
call sincInventario('V');

-- 3 Aceites, 2 cadenol
-- Entre dos fechas
-- Cantidad de productos en un mes

--Cantidad de productos vendidos en un dia

SELECT P.nombreProducto, sum(D.cantidad) as Cantidad
FROM DetalleFactura D, Producto P, Facturas F
WHERE P.codigoProducto = D.idProducto
AND F.idFactura = D.idFactura
AND F.fecha = STR_TO_DATE('2022-03-28', '%Y-%m-%d')
AND F.tipoTransaccion = 'V'
GROUP BY D.idProducto;

--Entre dos fechas

SELECT P.nombreProducto, sum(D.cantidad) as Cantidad
FROM DetalleFactura D, Producto P, Facturas F
WHERE P.codigoProducto = D.idProducto
AND F.idFactura = D.idFactura
AND (F.fecha BETWEEN STR_TO_DATE('2022-03-18', '%Y-%m-%d') AND STR_TO_DATE('2022-03-28', '%Y-%m-%d'))
AND F.tipoTransaccion = 'V'
GROUP BY D.idProducto;

--En un mes especifico

SELECT P.nombreProducto, sum(D.cantidad) as Cantidad
FROM DetalleFactura D, Producto P, Facturas F
WHERE P.codigoProducto = D.idProducto
AND F.idFactura = D.idFactura
AND MONTH(F.fecha) = 3
AND F.tipoTransaccion = 'V'
GROUP BY D.idProducto;

-- Total de ventas por factura en un dia

SELECT D.idFactura, sum(D.cantidad * D.precioProducto) As Total
FROM Facturas F, DetalleFactura D
WHERE F.idFactura = D.idFactura
AND F.fecha = STR_TO_DATE('2022-03-28', '%Y-%m-%d')
AND F.tipoTransaccion = 'V'
GROUP BY D.idFactura;

-- Total de ventas por factura Entre fechas 

SELECT D.idFactura, sum(D.cantidad * D.precioProducto) As Total
FROM Facturas F, DetalleFactura D
WHERE F.idFactura = D.idFactura
AND (F.fecha BETWEEN STR_TO_DATE('2022-03-18', '%Y-%m-%d') AND STR_TO_DATE('2022-03-28', '%Y-%m-%d'))
AND F.tipoTransaccion = 'V'
GROUP BY D.idFactura;

-- Total de ventas por factura En un mes especifico

SELECT D.idFactura, sum(D.cantidad * D.precioProducto) As Total
FROM Facturas F, DetalleFactura D
WHERE F.idFactura = D.idFactura
AND MONTH(F.fecha) = 3
AND F.tipoTransaccion = 'V'
GROUP BY D.idFactura;

--Cantidad de productos vendidos por categoria

--Cantidad de productos vendidos por categoria en un dia

SELECT C.nombreCategoria, sum(D.cantidad)
FROM DetalleFactura D, Producto P, Categoria C, Facturas F
WHERE D.idProducto = P.codigoProducto
AND P.idCategoria = C.codigoCategoria
AND F.idFactura = D.idFactura
AND F.fecha = STR_TO_DATE('2022-03-28', '%Y-%m-%d')
GROUP BY C.nombreCategoria;

--Cantidad de productos vendidos por categoria entre fechas

SELECT C.nombreCategoria, sum(D.cantidad)
FROM DetalleFactura D, Producto P, Categoria C, Facturas F
WHERE D.idProducto = P.codigoProducto
AND P.idCategoria = C.codigoCategoria
AND F.idFactura = D.idFactura
AND (F.fecha BETWEEN STR_TO_DATE('2022-03-18', '%Y-%m-%d') AND STR_TO_DATE('2022-03-28', '%Y-%m-%d'))
GROUP BY C.nombreCategoria;


--Cantidad de productos vendidos  por categoria en un mes especifico

SELECT C.nombreCategoria, sum(D.cantidad)
FROM DetalleFactura D, Producto P, Categoria C, Facturas F
WHERE D.idProducto = P.codigoProducto
AND P.idCategoria = C.codigoCategoria
AND F.idFactura = D.idFactura
AND MONTH(F.fecha) = 3
GROUP BY C.nombreCategoria;